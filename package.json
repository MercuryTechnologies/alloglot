{
  "name": "alloglot",
  "displayName": "Alloglot",
  "description": "Language agnostic IDE for VS Code",
  "version": "1.0.1",
  "publisher": "friedbrice",
  "license": "SEE LICENSE IN LICENSE.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/friedbrice/alloglot"
  },
  "categories": [
    "Other"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "alloglot.start",
        "title": "Alloglot: Start"
      },
      {
        "command": "alloglot.stop",
        "title": "Alloglot: Stop"
      },
      {
        "command": "alloglot.restart",
        "title": "Alloglot: Restart"
      },
      {
        "command": "alloglot.apisearch",
        "title": "Alloglot: Api search"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "alloglot.apisearch",
          "group": "navigation@2"
        }
      ]
    },
    "configuration": {
      "title": "Alloglot",
      "properties": {
        "alloglot.startCommand": {
          "type": "string",
          "description": "A command to run in a child process on startup. (TODO)",
          "default": ""
        },
        "alloglot.stopCommand": {
          "type": "string",
          "description": "A command to run on shutdown. `${pid}` will be interpolated with the process ID of the startup process. (TODO)",
          "default": ""
        },
        "alloglot.languages": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "languageId": {
                "type": "string",
                "description": "The unique language ID. You can usually find this in a language's syntax-highlighting extension.",
                "default": ""
              },
              "formatCommand": {
                "type": "string",
                "description": "A formatter command. Reads from STDIN and writes to STDOUT. `${file}` will be interpolated with the path to the file.",
                "default": ""
              },
              "apiSearchUrl": {
                "type": "string",
                "description": "URL to documentation/API search. `${query}` will be interpolated with the symbol under cursor.",
                "default": ""
              },
              "annotationsFiles": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "string",
                  "description": "JSON files that will be polled for diagnostics. See README.md for the format.",
                  "default": ""
                }
              }
            }
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm install && npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "build": "echo 'y' | npx vsce package"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^2.22.0",
    "eslint": "^8.56.0",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "extensionDependencies": []
}
